<Project Sdk="Microsoft.NET.Sdk">

  <ItemGroup>
    <ProjectReference Include="..\NetherGate.Core\NetherGate.Core.csproj" />
    <ProjectReference Include="..\NetherGate.API\NetherGate.API.csproj" />
    <ProjectReference Include="..\NetherGate.Python\NetherGate.Python.csproj" />
    <ProjectReference Include="..\NetherGate.Script\NetherGate.Script.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Hosting" Version="9.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="9.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="9.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration.Json" Version="9.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="9.0.0" />
  </ItemGroup>

  <PropertyGroup>
    <OutputType>Exe</OutputType>
    <TargetFramework>net9.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    
    <!-- 启用运行时依赖复制 -->
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <!-- 发布后将依赖移动到 lib 文件夹 -->
  <Target Name="MoveRuntimeDependenciesToLib" AfterTargets="Publish">
    <ItemGroup>
      <!-- 获取所有依赖 DLL（排除主程序集、API、Core、Python 和 Script） -->
      <DependencyFiles Include="$(PublishDir)*.dll" 
                       Exclude="$(PublishDir)NetherGate.Host.dll;$(PublishDir)NetherGate.API.dll;$(PublishDir)NetherGate.Core.dll;$(PublishDir)NetherGate.Python.dll;$(PublishDir)NetherGate.Script.dll" />
      <!-- 同时移动 PDB 文件 -->
      <DependencyPdbFiles Include="$(PublishDir)*.pdb" 
                          Exclude="$(PublishDir)NetherGate.Host.pdb;$(PublishDir)NetherGate.API.pdb;$(PublishDir)NetherGate.Core.pdb;$(PublishDir)NetherGate.Python.pdb;$(PublishDir)NetherGate.Script.pdb" />
    </ItemGroup>
    
    <!-- 创建 lib 目录 -->
    <MakeDir Directories="$(PublishDir)lib" />
    
    <!-- 移动依赖到 lib -->
    <Move SourceFiles="@(DependencyFiles)" DestinationFolder="$(PublishDir)lib" />
    <Move SourceFiles="@(DependencyPdbFiles)" DestinationFolder="$(PublishDir)lib" Condition="'@(DependencyPdbFiles)' != ''" />
    
    <Message Text="已将运行时依赖移动到 lib 文件夹" Importance="high" />
    <Message Text="DLL 文件数: @(DependencyFiles->Count())" Importance="high" />
  </Target>
  
  <!-- 确保 lib 和 runtimes 文件夹内容被包含在发布输出中 -->
  <ItemGroup>
    <Content Include="$(PublishDir)lib\**\*" CopyToPublishDirectory="PreserveNewest" Condition="Exists('$(PublishDir)lib')" />
    <Content Include="$(PublishDir)runtimes\**\*" CopyToPublishDirectory="PreserveNewest" Condition="Exists('$(PublishDir)runtimes')" />
  </ItemGroup>

  <!-- 构建后将依赖移动到 lib 文件夹（用于开发调试） -->
  <Target Name="MoveDebugDependenciesToLib" AfterTargets="Build">
    <ItemGroup>
      <!-- 获取所有依赖 DLL（排除主程序集、API、Core、Python 和 Script） -->
      <DebugDependencyFiles Include="$(OutputPath)*.dll" 
                            Exclude="$(OutputPath)NetherGate.Host.dll;$(OutputPath)NetherGate.API.dll;$(OutputPath)NetherGate.Core.dll;$(OutputPath)NetherGate.Python.dll;$(OutputPath)NetherGate.Script.dll" />
      <!-- 同时移动 PDB 文件 -->
      <DebugDependencyPdbFiles Include="$(OutputPath)*.pdb" 
                               Exclude="$(OutputPath)NetherGate.Host.pdb;$(OutputPath)NetherGate.API.pdb;$(OutputPath)NetherGate.Core.pdb;$(OutputPath)NetherGate.Python.pdb;$(OutputPath)NetherGate.Script.pdb" />
    </ItemGroup>
    
    <!-- 创建 lib 目录 -->
    <MakeDir Directories="$(OutputPath)lib" />
    
    <!-- 移动依赖到 lib -->
    <Move SourceFiles="@(DebugDependencyFiles)" DestinationFolder="$(OutputPath)lib" />
    <Move SourceFiles="@(DebugDependencyPdbFiles)" DestinationFolder="$(OutputPath)lib" Condition="'@(DebugDependencyPdbFiles)' != ''" />
    
    <Message Text="已将调试依赖移动到 lib 文件夹" Importance="high" />
    <Message Text="DLL 文件数: @(DebugDependencyFiles->Count())" Importance="high" />
  </Target>

</Project>
